<% if (template == 'typescript') { %>

import ServiceAbstract from '../../global/models/service.model';
import { I<%= pascalCaseName %> } from './<%= lowerCaseName %>.interface';

export default class <%= pascalCaseName %>Service extends ServiceAbstract {
	private <%= camelCaseName %>: Array<I<%= pascalCaseName %>> = [];

	findAll = async (): Promise<Array<I<%= pascalCaseName %>>> => {
		try {
			return this.<%= camelCaseName %>;
		} catch (error) {
			throw error;
		}
	};

	findById = async (): Promise<Array<I<%= pascalCaseName %>>> => {
		try {
			return this.<%= camelCaseName %>;
		} catch (error) {
			throw error;
		}
	};

	findOne = async (): Promise<Array<I<%= pascalCaseName %>>> => {
		try {
			return this.<%= camelCaseName %>;
		} catch (error) {
			throw error;
		}
	};

	save = async (): Promise<any> => {
		try {
			return true;
		} catch (error) {
			throw error;
		}
	};

	update = async (): Promise<any> => {
		try {
			return true;
		} catch (error) {
			throw error;
		}
	};

	delete = async (): Promise<any> => {
		try {
			return true;
		} catch (error) {
			throw error;
		}
	};
}

<% } else { %>

const <%= pascalCaseName %>Service = {};

<%= pascalCaseName %>Service.findAll = async () => {
	try {
		return [];
	} catch (error) {
		throw error;
	}
};

<%= pascalCaseName %>Service.findById = async (id) => {
	try {
		return [];
	} catch (error) {
		throw error;
	}
};

<%= pascalCaseName %>Service.findOne = async (<%= lowerCaseName %>) => {
	try {
		return [];
	} catch (error) {
		throw error;
	}
};

<%= pascalCaseName %>Service.save = async (<%= lowerCaseName %>) => {
	try {
		return true;
	} catch (error) {
		throw error;
	}
};

<%= pascalCaseName %>Service.update = async (<%= lowerCaseName %>) => {
	try {
		return true;
	} catch (error) {
		throw error;
	}
};

<%= pascalCaseName %>Service.delete = async (id) => {
	try {
		return true;
	} catch (error) {
		throw error;
	}
};

module.exports = <%= pascalCaseName %>Service;

<% } %>