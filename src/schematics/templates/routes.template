<% if (language == 'typescript') { %>

import { Router } from 'express';
import AbstractRoutes from '../../global/helpers/abstract.routes';
import <%= pascalCase %>Controller from './<%= lowerCase %>.controller';

export default class <%= pascalCase %>Routes extends AbstractRoutes {
  constructor(
    private _<%= camelCase %>Ctrl = new <%= pascalCase %>Controller()
  ) {
    super();
  }

  public path: string = '/<%= lowerCase %>';
  protected routes: IRoute[] = [
    {
      path: '/',
      method: Methods.GET,
      handler: this._<%= camelCase %>Controller.get<%= pascalCase %>,
      localMiddleware: []
    }
  ];
}

<% } else { %>

const { Router } = require('express');

const { get<%= pascalCase %> } = require('./<%= lowerCase %>.controller');

const router = Router();

router.get('/', get<%= pascalCase %>);
router.post('/', save<%= pascalCase %>);
router.put('/:id', update<%= pascalCase %>);
router.delete('/:id', delete<%= pascalCase %>);

module.exports = router;

<% } %>