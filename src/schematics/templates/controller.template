<% if (language == 'typescript') { %>

import { Request, Response } from 'express';
import <%= pascalCase %>Service from './<%= lowerCase %>.service';
import { I<%= pascalCase %> } from './<%= lowerCase %>.interface';

export default class <%= pascalCase %>Controller {
	private <%= camelCase %>: Array<I<%= pascalCase %>> = [];

	constructor(private _<%= camelCase %>Service = new <%= pascalCase %>Service()) {}

	get<%= pascalCase %> = async (req: Request, res: Response): Promise<Response> => {
		try {
			this.<%= camelCase %> = await this._<%= camelCase %>Service.findAll();
			return res.json({ <%= camelCase %>: this.<%= camelCase %> });
		} catch (error) {
			console.error(error);
			return res.status(500).send(`An error ocurred in <%= pascalCase %>Controller.get<%= pascalCase %>: ${error}`);
		}
	};
}

<% } else { %>

const _<%= camelCase %>Service = require('./<%= lowerCase %>.service');

const <%= pascalCase %>Controller = {};

<%= pascalCase %>Controller.get<%= pascalCase %> = async (req, res) => {
	try {
		const <%= camelCase %> = await _<%= camelCase %>Service.findAll();

		if (<%= camelCase %>.length === 0) {
			return res.status(404).json({ msg: 'Not found registers' });
		}

		return res.json({ <%= camelCase %> });
	} catch (error) {
		console.error('Error in <%= pascalCase %>Controller.get<%= pascalCase %>', error);
		return res.status(500).send(error);
	}
};

module.exports = <%= pascalCase %>Controller;

<% } %>